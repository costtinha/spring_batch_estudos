services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=15940898
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - SPRING_BATCH_JDBC_INITIALIZE_SCHEMA=always
      - SPRING_BATCH_JOB_ENABLED=false
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_BATCH=TRACE
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_JDBC=TRACE
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - batch-network
    volumes:
      - ./src/main/resources/user_10k.csv:/app/user_10k.csv

  db:
    image: postgres:16
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=15940898
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - batch-network

  redis:
    image: redis:7
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    networks:
      - batch-network

networks:
  batch-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data: